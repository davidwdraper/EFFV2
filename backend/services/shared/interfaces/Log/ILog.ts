// backend/services/shared/interfaces/Log/ILog.ts
/**
 * Shared log payload contract used across services.
 * Keep this in sync with the Log service schema.
 */
export interface ILogFields {
  /** GUID assigned by caller or generated by the Log service */
  logId: string;

  /** ISO 8601 timestamp (created at source) */
  timeCreated: string;

  /** App-defined category (e.g., 1=create, 2=update, 3=delete, etc.) */
  logType: number;

  /** Severity level (e.g., 0=debug, 1=info, 2=warn, 3=error, etc.) */
  logSeverity: number;

  /** Optional: request path or logical route */
  path?: string;

  /** Optional: user performing the action */
  userId?: string | null;

  /** Optional: domain/entity name (Act, User, Place, Event, Image, etc.) */
  entityName?: string | null;

  /** Optional: specific entity id affected */
  entityId?: string | null;

  /** Optional: human-readable message/details */
  message?: string | null;
}

/** Convenience type for callers composing extra metadata with the log payload */
export type ILogEvent = ILogFields & Record<string, unknown>;
