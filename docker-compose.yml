version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  orchestrator:
    build: ./backend/orchestrator
    container_name: orchestrator
    ports:
      - "${ORCHESTRATOR_PORT}:4000"
    env_file: .env.docker
    depends_on:
      - user-service
      - auth-service
    networks:
      - eff-net

  user-service:
    build: ./backend/services/user
    container_name: user-service
    ports:
      - "${USER_PORT}:4001"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  act-service:
    build: ./backend/services/act
    container_name: act-service
    ports:
      - "${ACT_PORT}:4002"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  event-service:
    build: ./backend/services/event
    container_name: event-service
    ports:
      - "${EVENT_PORT}:4003"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  place-service:
    build: ./backend/services/place
    container_name: place-service
    ports:
      - "${PLACE_PORT}:4004"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  image-service:
    build: ./backend/services/image
    container_name: image-service
    ports:
      - "${IMAGE_PORT}:4005"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  log-service:
    build: ./backend/services/log
    container_name: log-service
    ports:
      - "${LOG_PORT}:4006"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  auth-service:
    build: ./backend/services/auth
    container_name: auth-service
    ports:
      - "${AUTH_PORT}:4007"
    env_file: .env.docker
    depends_on:
      - user-service
    networks:
      - eff-net

  eventact-service:
    build: ./backend/services/eventact
    container_name: eventact-service
    ports:
      - "${EVENTACT_PORT}:4008"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  eventplace-service:
    build: ./backend/services/eventplace
    container_name: eventplace-service
    ports:
      - "${EVENTPLACE_PORT}:4009"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

  useract-service:
    build: ./backend/services/useract
    container_name: useract-service
    ports:
      - "${USERACT_PORT}:4010"
    env_file: .env.docker
    depends_on:
      - mongo
    networks:
      - eff-net

volumes:
  mongo-data:

networks:
  eff-net:
    driver: bridge
